server.port=8085

# After spring-boot-starter-data-jpa is added in the pom, springboot automatically load Hibernate auto-configuration
# since the configuration is not found, it produces the following error:
# 'Failed to configure a DataSource...Reason: Failed to determine a suitable driver class'
# spring.autoconfigure.exclude[0]=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
# spring.autoconfigure.exclude[1]=org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
# ref:
# 	https://stackoverflow.com/questions/24074749/spring-boot-cannot-determine-embedded-database-driver-class-for-database-type?page=1&tab=active#tab-top

logging.level.root=INFO

spring.datasource.url=jdbc:mysql://localhost:3308/e042_schema?autoReconnect=true
spring.datasource.username=admin01
spring.datasource.password=Password123!
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.show-sql=true
spring.jpa.generate-ddl=false
spring.jooq.sql-dialect=org.hibernate.dialect.MySQL8Dialect

# In order to avoid: Table 'DB_NAME.hibernate_sequence' doesn't exist, we have to disable
# hibernate_sequence table. By default, Hibernate generates key from hibernate_sequence table.
# ref: 
# 	https://mkyong.com/spring-boot/spring-boot-mysql-table-db_name-hibernate_sequence-doesnt-exist/
#	https://stackoverflow.com/questions/49813666/table-dbname-hibernate-sequence-doesnt-exist
spring.jpa.hibernate.use-new-id-generator-mappings=false
